name: Azure Pipelines

trigger:
- main

# TODO: Replace the agent pool name
pool: myAgentPool

variables:
  python.version: '3.8.10'
  vmImageName: 'ubuntu-18.04-LTS'
  terraform.version: '1.2.8'
  
stages:
- stage: Provision
  jobs:
  - job: TerraformTasks
    pool: myAgentPool
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'KNOWN_HOSTS_STRING'
        sshPublicKey: '$(azure-portal-ssh-key)'
        sshKeySecureFile: 'id_rsa_azure_portal'
    
    - task: TerraformInstaller@0
      displayName: Terraform Install
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformTaskV3@3
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/teraform'
        backendServiceArm: 'myInitialRG-service-connection'
        backendAzureRmResourceGroupName: 'myInitialRG'
        backendAzureRmStorageAccountName: 'initialstorage101'
        backendAzureRmContainerName: 'initialcontainer101'
        backendAzureRmKey: 'terraform.tfstate'
    
    - task: TerraformTaskV3@3
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'myInitialRG-service-connection'
        commandOptions: '-lock=false'

    - task: TerraformTaskV3@3
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'myInitialRG-service-connection'

- stage: Build
  jobs:
  - job: build_artifacts
    displayName: Build Artifacts
    pool: myAgentPool
    steps: 
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool: myAgentPool
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: 'myRG2-service-connection'
              appName: 'myApplication2-AppService2'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  - deployment: VMDeploy
    displayName: Deploy Virtual Machine
    environment:
     name:  'myApplication2-myVM3'
     resourceType: VirtualMachine
  #  tags: TAG NAME
    strategy:
      runOnce:
        deploy:
         steps:
         - bash: |
             sudo apt-get upgrade -y
             sudo apt-get install python3-pip -y
             sudo apt-get install unzip -y
             sudo apt-get install -y chromium-browser
             sudo apt-get install -y chromium-chromedriver
             python3 -m pip install --upgrade pip
             pip3 install selenium
           displayName: Configure VM